DROP DATABASE IF EXISTS auheal;
CREATE DATABASE auheal;
USE auheal;


CREATE TABLE `_cities` (
  `id` INT NOT NULL PRIMARY KEY,
  `country_id` INT NOT NULL,
  `important` BOOL NOT NULL,
  `region_id` INT NULL,
  `title_ru` VARCHAR(150) NULL,
  `area_ru` VARCHAR(150) NULL,
  `region_ru` VARCHAR(150) NULL,
  `title_ua` VARCHAR(150) NULL,
  `area_ua` VARCHAR(150) NULL,
  `region_ua` VARCHAR(150) NULL,
  `title_be` VARCHAR(150) NULL,
  `area_be` VARCHAR(150) NULL,
  `region_be` VARCHAR(150) NULL,
  `title_en` VARCHAR(150) NULL,
  `area_en` VARCHAR(150) NULL,
  `region_en` VARCHAR(150) NULL,
  `title_es` VARCHAR(150) NULL,
  `area_es` VARCHAR(150) NULL,
  `region_es` VARCHAR(150) NULL,
  `title_pt` VARCHAR(150) NULL,
  `area_pt` VARCHAR(150) NULL,
  `region_pt` VARCHAR(150) NULL,
  `title_de` VARCHAR(150) NULL,
  `area_de` VARCHAR(150) NULL,
  `region_de` VARCHAR(150) NULL,
  `title_fr` VARCHAR(150) NULL,
  `area_fr` VARCHAR(150) NULL,
  `region_fr` VARCHAR(150) NULL,
  `title_it` VARCHAR(150) NULL,
  `area_it` VARCHAR(150) NULL,
  `region_it` VARCHAR(150) NULL,
  `title_pl` VARCHAR(150) NULL,
  `area_pl` VARCHAR(150) NULL,
  `region_pl` VARCHAR(150) NULL,
  `title_ja` VARCHAR(150) NULL,
  `area_ja` VARCHAR(150) NULL,
  `region_ja` VARCHAR(150) NULL,
  `title_lt` VARCHAR(150) NULL,
  `area_lt` VARCHAR(150) NULL,
  `region_lt` VARCHAR(150) NULL,
  `title_lv` VARCHAR(150) NULL,
  `area_lv` VARCHAR(150) NULL,
  `region_lv` VARCHAR(150) NULL,
  `title_cz` VARCHAR(150) NULL,
  `area_cz` VARCHAR(150) NULL,
  `region_cz` VARCHAR(150) NULL);

CREATE TABLE `_regions` (
  `region_id` INT NOT NULL,
  `country_id` INT NOT NULL,
  `title_ru` VARCHAR(150) NULL,
  `title_ua` VARCHAR(150) NULL,
  `title_be` VARCHAR(150) NULL,
  `title_en` VARCHAR(150) NULL,
  `title_es` VARCHAR(150) NULL,
  `title_pt` VARCHAR(150) NULL,
  `title_de` VARCHAR(150) NULL,
  `title_fr` VARCHAR(150) NULL,
  `title_it` VARCHAR(150) NULL,
  `title_pl` VARCHAR(150) NULL,
  `title_ja` VARCHAR(150) NULL,
  `title_lt` VARCHAR(150) NULL,
  `title_lv` VARCHAR(150) NULL,
  `title_cz` VARCHAR(150) NULL);
  
CREATE TABLE `_countries` (
  `country_id` INT NOT NULL,
  `title_ru` VARCHAR(60) NULL,
  `title_ua` VARCHAR(60) NULL,
  `title_be` VARCHAR(60) NULL,
  `title_en` VARCHAR(60) NULL,
  `title_es` VARCHAR(60) NULL,
  `title_pt` VARCHAR(60) NULL,
  `title_de` VARCHAR(60) NULL,
  `title_fr` VARCHAR(60) NULL,
  `title_it` VARCHAR(60) NULL,
  `title_pl` VARCHAR(60) NULL,
  `title_ja` VARCHAR(60) NULL,
  `title_lt` VARCHAR(60) NULL,
  `title_lv` VARCHAR(60) NULL,
  `title_cz` VARCHAR(60) NULL);

-- Клиенты
DROP TABLE IF EXISTS users;
CREATE TABLE users(
	id SERIAL PRIMARY KEY,
	first_name VARCHAR(50),
	last_name VARCHAR(50),
	phone BIGINT UNSIGNED UNIQUE,
	email VARCHAR(100) UNIQUE,
	password_hash VARCHAR(100)
);

-- Информация о клиентах
DROP TABLE IF EXISTS user_profiles;
CREATE TABLE user_profiles (
	user_id BIGINT UNSIGNED NOT NULL,
    birthday DATE,
    hometown_id INT NOT NULL,
    created_at DATETIME DEFAULT NOW(),
	updated_at DATETIME ON UPDATE NOW(),
    
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (hometown_id) REFERENCES _cities(id)
);

-- Тренеры (сначала должны быть зарегистрированы как пользователь)
DROP TABLE IF EXISTS coaches;
CREATE TABLE coaches(
	id SERIAL PRIMARY KEY,
	user_id BIGINT UNSIGNED NOT NULL,
	created_at DATETIME DEFAULT NOW(),
	updated_at DATETIME ON UPDATE NOW(),
	
	FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Список курсов (на данный момент - видов тренировок)
DROP TABLE IF EXISTS courses;
CREATE TABLE courses(
	id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
	name VARCHAR(50),
	description TEXT,
	created_at DATETIME DEFAULT NOW(),
	updated_at DATETIME ON UPDATE NOW()
);

-- Квалификация тренеров 
DROP TABLE IF EXISTS skills;
CREATE TABLE skills(
	coach_id BIGINT UNSIGNED NOT NULL,
	course_id SMALLINT UNSIGNED NOT NULL,
	created_at DATETIME DEFAULT NOW(),
	updated_at DATETIME ON UPDATE NOW(),
	
	PRIMARY KEY (coach_id, course_id),
	FOREIGN KEY (coach_id) REFERENCES coaches(id),
	FOREIGN KEY (course_id) REFERENCES courses(id)
);

-- Статус записи на курс (тренировку)
DROP TABLE IF EXISTS statuses;
CREATE TABLE statuses (
	id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
	name VARCHAR(50),
	created_at DATETIME DEFAULT NOW(),
    updated_at DATETIME ON UPDATE NOW()
);

-- Расписание
DROP TABLE IF EXISTS schedule;
CREATE TABLE schedule (
	id SERIAL PRIMARY KEY,
	city_id INT NOT NULL,
	coach_id BIGINT UNSIGNED NOT NULL,
	course_id SMALLINT UNSIGNED NOT NULL,
	user_id BIGINT UNSIGNED NOT NULL,
	beginning DATETIME,
	duration TIME NOT NULL DEFAULT '01:00:00',
	status_id TINYINT UNSIGNED NOT NULL,
	created_at DATETIME DEFAULT NOW(),
	updated_at DATETIME ON UPDATE NOW(),
	comment VARCHAR(300),
	
	FOREIGN KEY (city_id) REFERENCES _cities(id),
	FOREIGN KEY (coach_id) REFERENCES coaches(id),
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (course_id) REFERENCES courses(id),
	FOREIGN KEY (status_id) REFERENCES statuses(id)
);